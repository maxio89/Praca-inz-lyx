#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass pwszdpl
\options pdflatex
\use_default_options false
\maintain_unincluded_children false
\language polish
\language_package default
\inputencoding latin2
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 11
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 0
\use_esint 0
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Indeks
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language polish
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Podsumowanie
\end_layout

\begin_layout Standard
W niniejszej pracy został opisany proces przygotowania systemu rozpoznawania
 mowy.
 Zostały przedstawione narzędzia potrzebne do sterowania robotem w grach
 planszowych.
 Opisane zostały także podstawowe informacje o sygnale mowy oraz podstawy
 systemów rozpoznawania mowy.
 
\end_layout

\begin_layout Standard
Część praktyczna niniejszej pracy składa się z silnika rozpoznawania mowy
 wytrenowanego z użyciem HTK oraz aplikacji napisanej w Pythonie, która
 łączy w sobie wszystkie założone funkcjonalności takie jak detekcję i nagrywani
e dźwięku, rozpoznawanie mowy z użyciem bibliotek HTK, sterowanie robotem
 oraz gry planszowe (wilk i owce, szachy).
 Aplikacja ta jest typu 
\emph on
proof of concept,
\emph default
 dowodzi spełnienia postawionych założeń oraz prezentuje przykładowe zastosowani
e rozpoznawania mowy do sterowania urządzeniem elektronicznym, w tym przypadku
 robotem.
\end_layout

\begin_layout Standard
Działanie systemu stworzonego na potrzeby niniejszej pracy zostało przetestowane
 a uzyskana skuteczność jest zgodna z założeniami i pozwala na poprawne
 sterowanie robotem.
 Po przygotowaniu wszystkich narzędzi i skryptów, można niewielkim nakładem
 pracy zbudować w pełni działający oraz skuteczny system rozpoznawania mowy
 o małym słowniku.
\end_layout

\begin_layout Section
Jakość systemu
\end_layout

\begin_layout Standard
HTK do poprawnego wytrenowania systemu wymaga conajmniej 3 próbek dla każdego
 słowa ze słownika.
 Do uzyskania zadowalającej skutecznośći systemu z małym słownikiem oraz
 po wyeliminowaniu podobieństw słów wystarczy po 10 próbek dla każdego słowa.

\series bold
 
\series default
System stworzony na potrzeby niniejszej pracy posiada słownik składający
 się z 39
\series bold
 
\series default
słów, z których każde występuje conajmniej po 20 razy we wszystkich nagraniach
 treningowych.
 Słowa zostały dobrane tak aby były długie oraz jak najbardziej różniły
 się od siebie, co pomaga osiągnąć wysoką skuteczność rozpoznawania na poziomie
 około 99%.
 Uzyskanie takiej skuteczności wymaga od użytkownika pewnej dyscypliny.
 Komendy powinny być wypowiadane w normalnym tempie, wyraźnie oraz z zachowaniem
 odpowiedniej głośności (komendy nie muszą być wypowiadane podniesionym
 głosem, lecz nie mogą być również wypowiadane zbyt cicho).
 Użytkownik musi także uważać, aby nie wypowiadać przypadkowych słów, ponieważ
 zostaną im przyporządkowane słowa ze słownika systemu, które mogą być komendami
 sterującymi.
 Ilość stanów w modelu HMM została dobrana eksperymentalnie.
 HTK domyślnie tworzy modele 5-cio stanowe, zostały również przetestowane
 modele 7, 9, 11 oraz 15-sto stanowe.
 Największą skuteczność uzyskanu w przypadku 15-sto stanowych modeli HMM,
 z tym, że różnice w poprawie skutecznośći w zależności od ilości stanów
 w modelu były niewielkie.
 Początkowym wyznacznikiem tej skuteczności było przetestowanie systemu
 na próbkach wykorzystanych do jego wytrenowania.
 Po przeprowadzeniu takiego testu skutecznośc wyniosła blisko 100% jeśli
 chodzi o rozpoznawanie pojedynczych słów oraz około 95% w przypadku rozpoznawan
ia całych sentencji.
 W początkowej fazie prac, gdy słownik zawierał mniej słów oraz było mniej
 nagrań treningowych rozpoznawanie próbek treningowych dawało 100%
\series bold
 
\series default
poprawność.
 
\end_layout

\begin_layout Section
Możliwości rozwoju
\end_layout

\begin_layout Standard
W chwili składania tej pracy, dostępne gry to wilk i owce oraz szachy.
 Sterowanie w nich przebiega w podobny, niezbyt skomplikowany sposób.
 Warto byłoby przetestować jakąś grę, w której sposób sterowania jest w
 większym stopniu skomplikowany, co za tym idzie, słownik systemu mógłby
 ulec powiększeniu.
 Wymagałoby to również nagrania większej ilości danych treningowych.
 
\end_layout

\begin_layout Standard
Ciekawym kierunkiem rozwoju w opinii autora byłoby oparcie systemu rozpoznawania
 mowy na fonemach jako najmniejszych jednostkach fonetycznych.
 Umożliwiłoby to rozpoznawanie komend ze zbioru otwartego co jest przeciwieństwe
m strategii zastosowanej w niniejszej pracy.
 Pociąga to za sobą konieczność nagrania dużej ilości próbek treningowy
 aby umożliwić poprawne wytrenowanie modeli HMM.
 Niestety skuteczność rozpoznawania w takim systemie, byłaby zapewne trochę
 niższa od osiągniętej w niniejszej pracy.
\end_layout

\begin_layout Standard
Kolejnym interesującym kierunkiem rozwoju, byłoby stworzenie systemu rozpoznawan
ia mowy niezależnego od mówcy.
 Wymagałoby to wytrenowania systemu na nagraniach pochodzących od różnych
 osób, których głosy mają odmienną tonacje (dzieci, kobiet, osób starszych).
 Brak dostępu do bazy nagrań języka polskiego znacznie utrudnia to zadanie,
 bo stworzenie takowej byłoby bardzo czasochłonne oraz mogłoby być osobnym
 projektem, niezwiązanym z niniejszą pracą.
 Taka baza byłaby również przydatna do poprawnego wytrenowania systemu opartego
 na fonemach.
 Pierwszym pomysłem jaki nasunął się autorowi, umożliwiającym pokonanie
 tej przeciwności, byłoby skorzystanie z darmowych nagrań znalezionych np.
 w Internecie, lub wykorzystanie ksiażki w wersji 
\emph on
audiobook
\emph default
 i za pomocą takich nagrań możnaby wytrenować system rozpoznawania mowy.
 Kolejną ideą zwiazaną z tworzeniem systemu niezależnego od mówcy jest rozwinięc
ie aplikacji o możliwość automatycznej adaptapcji do mówcy.
 Polegałoby to na poinstruowaniu użytkownika, który po raz pierwszy korzysta
 z systemu oraz nagraniu jego głosu podczas ustalonych wypowiedzi, następnie
 ponownym wytrenowaniu systemu na próbkach nowego głosu.
 Taka czynność byłaby uruchamiana tylko podczas pierwszego korzystania z
 systemu oraz mogłaby być opcjonalna, uruchamiana jedynie w przypadku niskiej
 skuteczności rozpoznawania dla danego głosu w celu jej poprawienia.
\end_layout

\begin_layout Standard
W dobie coraz większej popularności urządzeń mobilnych takich jak smartfony
 lub tablety, działających na systemie Android, który posiada ponad połowę
 światowego rynku urządzeń mobilnych pomysłem wartym uwagi wydaje się stworzenie
 wersji mobilnej aplikacji.
 Bilioteki HTK są niezbędne do poprawnego działania aplikacji stworzonej
 na potrzeby niniejszej pracy.
 Zatem przeniesienie wszystkich funkcjonalności na system Android wiąże
 się ze skompilowaniem bibliotek HTK na tym systemie.
 W razie problemów z uruchomieniem HTK w systemie Android, alternatywą pozostaje
 skorzystanie z urządzenia Raspberry Pi jako serwera na którym odbywa się
 rozpoznawanie mowy za pomocą HTK.
 Aplikacja działająca na urządzeniu mobilnym z systemem Android podłączonym
 do sieci, nagrywałaby wypowiedzi użytkownika, wysyłała do serwera skąd
 otrzymywałaby wyniki rozpoznawania a następnie odpowiadała za rozgrywkę
 oraz sterowanie robotem.
\end_layout

\begin_layout Standard
Podsumowując, systemy rozpoznawania mowy dają duże spektrum możliwości rozwoju
 oraz w opinii autora, mogą zostać ciekawym oraz przyszłościowym obiektem
 zainteresowań.
\end_layout

\end_body
\end_document
